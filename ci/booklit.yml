
resource_types:

- name: sonar-runner
  type: docker-image
  source:
    repository: cathive/concourse-sonarqube-resource
    tag: latest


resources:
- name: sample-gradle
  type: git
  source:
    uri: https://github.com/Vikas34/sample-gradle.git
    params:
      sonar_token: ((sonarqube_token))

#- name: code-analysis
#  type: sonar-runner
#  source:
#    host_url: https://devstack.vwgroup.com/sonar
#    login: 62cebc63d4b0ccab22da7459c32d49452e593ed7
#    project_key: test


jobs:
# - name: unit
#   plan:
#   - get: booklit
#     trigger: true
#   - task: test
#     file: booklit/ci/test.yml

- name: build-and-analyze
  plan:
  - get: sample-gradle
    trigger: true
  - task: build
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: java
          tag: 'openjdk-8'
      inputs:
      - name: sample-gradle
      outputs:
      - name: sonarqube-analysis-input
      run:
        path: /bin/sh
        args: ["sample-gradle/ci/build.sh"]
#        - -exc
#        - |
#          env
#          go version
        #path: /bin/sh
        #args: ["sample-gradle/ci/build.sh"]
#  - put: code-analysis
#    params:
#      project_path: sonarqube-analysis-input
#      project_key: test
#      sources: sonarqube-analysis-input
#      additional_properties:
#        sonar.projectKey: test

#- name: qualitygate
#  plan:
#    - get: code-analysis
#      passed:
#      - build-and-analyze
#      trigger: true
#    - task: check-sonarqube-quality-gate
#      config:
#        platform: linux
#        image_resource:
#          type: docker-image
#          source:
#            repository: cathive/concourse-sonarqube-qualitygate-task
#            tag: latest # Use one of the versioned tags for reproducible builds!
#        inputs:
#        - name: code-analysis
#        run:
#          path: /sonarqube-qualitygate-check
#          dir: code-analysis

